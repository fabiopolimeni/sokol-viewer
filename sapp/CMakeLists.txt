add_definitions(-DSOKOL_NO_DEPRECATED)

# macro to select the sokol-backend and shader dialects
macro(sokol_config)
    add_definitions(-DSOKOL_NO_DEPRECATED)
    if (FIPS_EMSCRIPTEN)
        add_definitions(-DSOKOL_GLES3)
        set(slang "glsl300es:glsl100")
    elseif (FIPS_RASPBERRYPI)
        add_definitions(-DSOKOL_GLES2)
        set(slang "glsl100")
    elseif (FIPS_ANDROID)
        add_definitions(-DSOKOL_GLES3)
        set(slang "glsl300es")
    elseif (SOKOL_USE_D3D11)
        add_definitions(-DSOKOL_D3D11)
        set(slang "hlsl5")
    elseif (SOKOL_USE_WAYLAND OR SOKOL_USE_XCB)
        if (SOKOL_USE_WAYLAND)
            add_definitions(-DSOKOL_WAYLAND)
        else(SOKOL_USE_XCB)
            add_definitions(-DSOKOL_LINUX_XCB)
        endif()
        # By default Wayland uses glsl330
        # but SOKOL_USE_GLES3 is forced
        if (SOKOL_USE_GLES3)
            add_definitions(-DSOKOL_GLES3)
            set(slang "glsl300es")
        else()
            add_definitions(-DSOKOL_GLCORE33)
            set(slang "glsl330")
        endif()
    elseif (SOKOL_USE_METAL)
        add_definitions(-DSOKOL_METAL)
        if (FIPS_IOS)
            set(slang "metal_ios")
        else()
            set(slang "metal_macos")
        endif()
    else()
        if (FIPS_IOS)
            add_definitions(-DSOKOL_GLES3)
            set(slang "glsl300es")
        else()
            add_definitions(-DSOKOL_GLCORE33)
            set(slang "glsl330")
        endif()
    endif()
endmacro()

fips_add_subdirectory(atlas)
fips_add_subdirectory(sokol)
fips_add_subdirectory(ui)
fips_add_subdirectory(tinyobjloader)
#fips_add_subdirectory(cute)
fips_add_subdirectory(stb)
fips_add_subdirectory(containers)

#-------------------------------------------------------------------------------
#   The viewer app with UI
#
sokol_config()
fips_begin_app(viewer-sapp-ui windowed)
if (FIPS_MSVC)
    add_definitions(-D_CRT_SECURE_NO_WARNINGS)
endif()
    fips_vs_warning_level(3)
    fips_files_ex(. viewer*.c NO_RECURSE)
    sokol_shader(shaders/geometry_pass.glsl ${slang})
    fips_deps(sokol tinyobjloader mathc imgui sgui stb containers)
fips_end_app()
